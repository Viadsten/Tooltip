.tooltip {
  position: absolute;
  top: 0;
  left: 0;

  display: flex;

  pointer-events: none;

  &__content {
    position: relative;

    max-width: calc(100vw - 24px);
    padding: 7px 12px;

    background-color: rgba(109, 119, 249, 1);
    // border-radius: 6px;
    pointer-events: all;

    .tooltip__mark {
      position: absolute;
      bottom: 0;
      left: 0;
      // transform: translate3d(0, calc(100% - 1px), 0);

      width: 20px;
      height: 9px;

      background-color: inherit;
      clip-path: polygon(0 0, 50% 100%, 100% 0);
    }

    &.arrow-bottom .tooltip__mark {
      bottom: unset;
      top: 0;
      // left: calc(50% - 10px);
      // transform: translate3d(0, calc(-100% + 1px), 0);
      clip-path: polygon(0 100%, 50% 0, 100% 100%);
    }
  }

  &__text {
    margin: 0;

    font-size: 14px;
    line-height: 18px;
    color: $color-default-white;
  }
}

// mods

.tooltip__content {
  &--img {
    display: flex;
    align-items: center;
    width: 350px;

    .tooltip__img {
      margin-left: 10px;

      flex-shrink: 0;
      width: 60px;
      height: 60px;
    }

    img {
      object-fit: cover;
      width: 100%;
      height: 100%;
    }
  }

  &--red {
    background: $color-torch-red;
  }
}

// tooltip animations ----------------
// для анимаций указывайте transition-property
// НЕ прописывайте transition-duration в css. его нужно указывать в js настройках

.tooltip__content {
  &.fade {
    opacity: 0;
    transition-property: opacity;

    &.is-shown {
      opacity: 1;
    }
  }

  &.fib:not(.bottom) {
    opacity: 0;
    transform: translate3d(0, -5px, 0);
    transition-property: transform opacity;

    &.is-shown {
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }

  &.fib.bottom {
    opacity: 0;
    transition-property: transform opacity;
    transform: translate3d(0, 5px, 0);

    &.is-shown {
      transform: translate3d(0, 0, 0);
      opacity: 1;
    }
  }

  &.scale {
    opacity: 0;
    transition-property: transform opacity;
    transform: translate3d(0, 10px, 0) scale(0);

    &.is-shown {
      transform: translate3d(0, 0, 0) scale(1);
      opacity: 1;
    }
  }
}


